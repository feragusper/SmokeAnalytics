# Workflow to build the Android Debug APK and upload the generated artifact
name: Deploy Artifact

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Android Debug APK and Upload Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Configure keys and decrypt google-services.json
        run: |
          # Set up local.properties with staging keys only
          echo google.auth.server.client.id=\"${{ secrets.GOOGLE_AUTH_SERVER_CLIENT_ID_STAGING }}\" > ./local.properties
          echo google.ai.client.generativeai.api.key=\"${{ secrets.GOOGLE_AI_CLIENT_GENERATIVEAI_API_KEY_STAGING }}\" >> ./local.properties

          echo "✅ local.properties configured for staging."

          # Decrypt google-services.json for staging
          mkdir -p ./apps/mobile/src/staging/
          echo "${{ secrets.GOOGLE_SERVICES_JSON_STAGING }}" > ./apps/mobile/src/staging/google-services.json.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSPHRASE }}" --batch ./apps/mobile/src/staging/google-services.json.asc > ./apps/mobile/src/staging/google-services.json

          if [ ! -s ./apps/mobile/src/staging/google-services.json ]; then
            echo "❌ Decryption failed or file is empty (staging)!"
            exit 1
          fi

          echo "✅ Staging google-services.json decrypted."

      - name: Build Staging Debug APK
        run: ./gradlew assembleStagingDebug --stacktrace

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mobile
          path: ./apps/mobile/build/outputs/apk/debug/app-debug.apk