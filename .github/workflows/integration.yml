name: Integration

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - master

jobs:
  build:
    name: Integration
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Config keys
        run: |
          echo google.auth.server.client.id=\"${{ secrets.GOOGLE_AUTH_SERVER_CLIENT_ID_STAGING }}\" > ./local.properties
          mkdir ./app/src/staging/
          echo "${{ secrets.GOOGLE_SERVICES_JSON_STAGING }}" > ./app/src/staging/google-services.json.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSPHRASE }}" --batch ./app/src/staging/google-services.json.asc > ./app/src/staging/google-services.json
          mkdir ./app/src/production/
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > ./app/src/production/google-services.json.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSPHRASE }}" --batch ./app/src/production/google-services.json.asc > ./app/src/production/google-services.json

      - name: Check
        run: bash ./gradlew check --stacktrace

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --stacktrace