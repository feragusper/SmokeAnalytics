name: Deploy to Play Store

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Config keys
        run: |
          echo google.auth.server.client.id=\"${{ secrets.GOOGLE_AUTH_SERVER_CLIENT_ID }}\" > ./local.properties
          mkdir ./apps/mobile/src/production/
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > ./apps/mobile/production/google-services.json.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSPHRASE }}" --batch ./apps/mobile/production/google-services.json.asc > ./apps/mobile/production/google-services.json

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install bundler
        run: |
          gem install bundler:2.2.27
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Config keystore
        env:
          GOOGLE_AUTH_SERVER_CLIENT_ID: ${{ secrets.GOOGLE_AUTH_SERVER_CLIENT_ID }}
        shell: bash
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_PROPERTIES }}" > ./release.keystore.properties.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSPHRASE }}" --batch ./release.keystore.properties.asc > ./release.keystore.properties
          echo "${{ secrets.RELEASE_KEYSTORE }}" > ./release.keystore.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSPHRASE }}" --batch ./release.keystore.asc > ./release.keystore
          echo "${{ secrets.PLAYSTORE_CREDENTIALS }}" > ./playstore.credentials.json.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSPHRASE }}" --batch ./playstore.credentials.json.asc > ./playstore.credentials.json

      - name: Build bundle
        run: bash ./gradlew bundleProductionRelease --stacktrace

      - name: Build & deploy Android release
        run: bundler exec fastlane android deploy_playstore

      - name: Retrieve Version
        run: |
          echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew -q printVersionName)"
        id: android_version

      - name: Get version
        run: |
          echo "version_name=${{steps.android_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV

      - name: Push Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{env.version_name}}
          git push origin ${{env.version_name}}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.version_name}}
          release_name: Release ${{env.version_name}}
          draft: false
          prerelease: false